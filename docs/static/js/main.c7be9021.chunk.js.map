{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OACM,sBAAMC,SAdS,SAACC,GAEhBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAExBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOpB,SACM,uBACMO,KAAK,OACLC,MAAQT,EACRU,SAtBO,SAAAP,GACnBF,EAAcE,EAAEQ,OAAOF,a,+BCRtBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,iDAEqCC,UAAUH,GAF/C,+DAGEI,MAAMF,GAHR,cAGXG,EAHW,gBAIIA,EAAKC,OAJT,uBAIVC,EAJU,EAIVA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACxB,MAAO,CACDC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV7B,kBAcVM,GAdU,4CAAH,sDCGPO,G,MAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAInC,OACM,sBAAKc,UAAU,6CAAf,UACM,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,SCNVO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEVd,mBAAS,CAC7BqB,KAAM,GACNa,SAAS,IAJqB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAmBpC,OAZAC,qBAAW,WAELxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEjBH,EAAS,CACHf,KAAMkB,EACNL,SAAS,SAIxB,CAACpB,IAEGqB,EDhB0BK,CAAa1B,GAAjCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAErB,OACM,qCACM,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,sDAAb,wBAEb,qBAAKA,UAAU,YAAf,SACQH,EAAOJ,KACH,SAAAC,GAAG,OACG,cAAC,EAAD,eAEWA,GADCA,EAAIC,aEarCgB,EA3BM,WAAO,IAAD,EAEiBzC,mBAAS,CAAC,YAF3B,mBAEb0C,EAFa,KAED3C,EAFC,KAIrB,OACM,qCACM,8CACA,cAAC,EAAD,CACMA,cAAgBA,IAEtB,uBAEA,6BAEY2C,EAAWnB,KAAK,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEMA,SAAWA,GADLA,Y,MCbhD6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c7be9021.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { PropTypes } from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n      const [inputValue, setInputValue] = useState('')\n\n      const handleIputChange = e => {\n            setInputValue(e.target.value);\n      }\n\n      const handleSubmit = (e) => {\n\n            e.preventDefault();\n\n            if(inputValue.trim().length > 2) {\n\n                  setCategories(cats => [inputValue, ...cats]);\n                  setInputValue('');\n\n            }\n\n      }\n\n      return (\n            <form onSubmit={ handleSubmit }>\n                  <input\n                        type=\"text\"\n                        value={ inputValue }\n                        onChange={ handleIputChange }\n                  />\n            </form>\n      )\n}\n\nAddCategory.propTypes = {\n      setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async(category) => {\n\n      const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=b0G7aUYEuM5eRXShgEQDYHIygHTope7S`;\n      const resp = await fetch(url);\n      const {data} = await resp.json();\n\n      const gifs = data.map( img => {\n            return {\n                  id: img.id,\n                  title: img.title,\n                  url: img.images?.downsized_medium.url\n            }\n      } )\n\n      return gifs;\n}","import React from 'react'\nimport animate__animated from 'animate.css';\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n      /* console.log(id, title, url); */\n\n      return (\n            <div className=\"card animate__animated animate__fadeInLeft\">\n                  <img src={url} alt={title} />\n                  <p>{ title }</p>\n            </div>\n      )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n      const { data:images, loading } = useFetchGifs(category);\n\n      return (\n            <>\n                  <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n                  { loading && <p className=\" animate__animated animate__flash animate__infinite\">Loading...</p> }\n\n                  <div className=\"card-grid\">\n                        { images.map(\n                              img => (\n                                    <GifGridItem\n                                          key={ img.id }\n                                          { ...img }\n                                    />\n                              )) \n                        }\n\n                  </div>\n            </>\n      )\n}\n","import { useEffect, useStateÂ } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\n      const [state, setState] = useState({\n            data: [],\n            loading: true\n      });\n\n      useEffect( () => {\n\n            getGifs(category).then(imgs => {\n\n                  setState({\n                        data: imgs, \n                        loading: false\n                  })\n            })\n\n      }, [category])\n\n      return state;\n\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n      const [ categories, setCategories ] = useState(['Simpson']);\n\n      return ( \n            <>\n                  <h2>GifExpertApp</h2>\n                  <AddCategory\n                        setCategories={ setCategories }\n                  />\n                  <hr />\n\n                  <ol>\n                        { \n                              categories.map( category => (\n                                    <GifGrid \n                                          key={ category }\n                                          category={ category }\n                                    />\n                              ))\n                        }\n                  </ol>\n\n            </>\n       );\n}\n \nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}